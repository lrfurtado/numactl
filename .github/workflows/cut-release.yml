name: "cut-release"

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'version'
        required: false

jobs:
  cut_release:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3
      - name: "Build & test"
        run: |
          sudo apt-get install build-essential -y
          ./autogen.sh
          ./configure
          make distcheck
          make install DESTDIR=/usr/local/numactl
      - name: Update VERSION file on checkout 
        run: |
          set -x
          sudo apt-get install -y python3-semver
          if [ -z "$NEW_VERSION" ]; then
             echo "Current Version: $(cat VERSION)"
             pysemver bump patch $(cat VERSION) > VERSION
          else
             echo $NEW_VERSION > VERSION
          fi
          export NEW_VERSION=$(cat VERSION)
          echo "::set-output name=NEW_VERSION::$NEW_VERSION" 
        id: bump-version-file  
        env:
          NEW_VERSION: ${{ inputs.version }}
      - name: Commit VERSION file 
        uses: EndBug/add-and-commit@v9
        with:
          add: 'VERSION'
          message: bump semantic version
          committer_name: GitHub Actions
          committer_email: actions@github.com
      - name: Create Tag
        uses: rickstaa/action-create-tag@v1
        with:
          tag: "v${{ steps.bump-version-file.outputs.NEW_VERSION }}"
          message: "v{{ steps.bump-version-file.outputs.NEW_VERSION }} release"
      - name

      - name: Create Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: v${{ steps.bump-version-file.outputs.NEW_VERSION }}
          release_name: "Release ${{ steps.bump-version-file.outputs.NEW_VERSION }}"
          draft: false
          prerelease: false
          files: |
            *tar.gz
            *tgz
